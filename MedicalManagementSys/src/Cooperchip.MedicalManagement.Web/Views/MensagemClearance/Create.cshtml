@model Cooperchip.MedicalManagement.Domain.Entidade.MensagemClearance

@{ Layout = null; }

<div class="modal-dialog">
    <div class="modal-content">

        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
            <h4 class="modal-title">MedicalManagement-Sys - Adicionar Regras e Taxas de Clearance</h4>
        </div>

        @using (Html.BeginForm("Create", "MensagemClearance", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new { @class = "text-error" })

            <div class="modal-body">
                <div class="form-horizontal">

                    <div class="form-group">
                        @Html.LabelFor(model => model.GenericoId, "Genérico Id", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("GenericoId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GenericoId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Substancia, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EnumDropDownListFor(model => model.Substancia, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Substancia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ParametroInicial, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ParametroInicial, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ParametroInicial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ParametroFinal, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ParametroFinal, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ParametroFinal, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Mensagem, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Mensagem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Mensagem, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>

            <div class="modal-footer">
                <input type="submit" value="Adicionar" class="btn btn-primary" />
                <input type="button" value="Cancelar" class="btn btn-default" data-dismiss="modal" />
            </div>

        }

    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


